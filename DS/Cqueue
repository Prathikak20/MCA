Write a c++ program to implement Circular Queue data structure using arrays and class.
#include<iostream>
#define MAX 5
using namespace std;

class CQueue
{
    int CQ[MAX];
    int front,rear;
    public:
        CQueue()
        {
            front=rear=-1;
        }
        void fninsert()
        {
            int obj;
            if((rear+1)%MAX==front)
                cout<<"Circular Queue is full!\n";
            else
            {
                cout<<"Enter the element:";
                cin>>obj;
                rear=(rear+1)%MAX;
                CQ[rear]=obj;
                if(front==-1)
                    front=0;
            }
        }
        
        void fndelete()
        {
            int obj;
            if(front==-1)
                cout<<"Circular Queue is empty!\n";
            else
            {
                obj=CQ[front];
                if(front==rear)
                    front=rear=-1;
                else
                    front=(front+1)%MAX;
                cout<<"Deleted element:"<<obj<<"\n";
            }
        }
        void fndisplay()
        {
            int i;
            if(front==-1)
                cout<<"Circular Queue is empty!\n";
            else
            {
                if(front<=rear)
                {
                    for(i=front;i<=rear;i++)
                        cout<<CQ[i]<<"\t";
                }
                else
                {
                    for(i=front;i<=MAX-1;i++)
                        cout<<CQ[i]<<"\t";
                    for(i=0;i<=rear;i++)
                        cout<<CQ[i]<<"\t";
                }
            }
        }
};

int main()
{
    int ch;
    CQueue cq;
    cout<<"MENU\n1.INSERT\n2.DELETE\n3.DISPLAY\n4.EXIT\n";
    while(1)
    {
        cout<<"\nEnter your choice:";
        cin>>ch;
        switch(ch)
        {
            case 1:cq.fninsert();
                    break;
            case 2:cq.fndelete();
                    break;
            case 3:cq.fndisplay();
                    break;
            case 4:exit(0);
        }
    }
}

OUTPUT:
MENU
1.INSERT
2.DELETE
3.DISPLAY
4.EXIT

Enter your choice:1
Enter the element:1

Enter your choice:1
Enter the element:2

Enter your choice:1
Enter the element:3

Enter your choice:1
Enter the element:4

Enter your choice:1
Enter the element:5

Enter your choice:1
Circular Queue is full!

Enter your choice:
3
1       2       3       4       5
Enter your choice:2
Deleted element:1

Enter your choice:2
Deleted element:2

Enter your choice:2
Deleted element:3

Enter your choice:3
4       5
Enter your choice:1
Enter the element:8

Enter your choice:1
Enter the element:9

Enter your choice:3
4       5       8       9
Enter your choice:2
Deleted element:4

Enter your choice:2
Deleted element:5

Enter your choice:2
Deleted element:8

Enter your choice:2
Deleted element:9

Enter your choice:2
Circular Queue is empty!

Enter your choice:3
Circular Queue is empty!

Enter your choice:4
