//Design a Book application form using HTML/JSP. Have input fields for title, author, number of pages and price of the book. There are two buttons SAVE and FIND along with a CLEAR button. When SAVE button is clicked, the form details must be stored to the database (servlet-jdbc). When FIND button is clicked, with only the title of the book entered, retrieve the other details of the book (if available) from the database and display on the screen. Otherwise display an error message and provide a link to the main form
HTML/JSP Form (BookForm.jsp)
<%@ page language="java" contentType="text/html; charset=UTF-8"
pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
 <title>Book Application Form</title>
</head>
<body>
 <h2>Book Application Form</h2>
 <form action="BookServlet" method="post">
 <label for="title">Title:</label>
 <input type="text" id="title" name="title" required><br><br>

 <label for="author">Author:</label>
 <input type="text" id="author" name="author"><br><br>

 <label for="pages">Number of Pages:</label>
 <input type="number" id="pages" name="pages" min="1"><br><br>

 <label for="price">Price:</label>
 <input type="number" id="price" name="price" step="0.01"
min="0"><br><br>

 <button type="submit" name="action" value="save">SAVE</button>
 <button type="submit" name="action" value="find">FIND</button>
 <button type="reset">CLEAR</button>
 </form>
</body>
</html>
Servlet (BookServlet.java)
import java.io.*;
import java.sql.*;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.annotation.WebServlet;
@WebServlet("/BookServlet")
public class BookServlet extends HttpServlet {
 private static final String DB_URL = "jdbc:derby://localhost:1527/bookdb";
 private static final String DB_USER = "root";
 private static final String DB_PASSWORD = "kai";
 protected void doPost(HttpServletRequest request, HttpServletResponse
response)
 throws ServletException, IOException {
 String action = request.getParameter("action");
 String title = request.getParameter("title");
 response.setContentType("text/html");
 PrintWriter out = response.getWriter();
 try (Connection conn = DriverManager.getConnection(DB_URL, DB_USER,
DB_PASSWORD)) {
 if ("save".equals(action)) {
 String author = request.getParameter("author");
 int pages = Integer.parseInt(request.getParameter("pages"));
 double price = Double.parseDouble(request.getParameter("price"));
 String sql = "INSERT INTO books (title, author, pages, price) VALUES (?,
?, ?, ?)";
 try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
 pstmt.setString(1, title);
 pstmt.setString(2, author);
 pstmt.setInt(3, pages);
 pstmt.setDouble(4, price);
 pstmt.executeUpdate();
 out.println("<h3>Book details saved successfully!</h3>");
 }
 } else if ("find".equals(action)) {
 String sql = "SELECT author, pages, price FROM books WHERE title =
?";
 try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
 pstmt.setString(1, title);
 ResultSet rs = pstmt.executeQuery();
 if (rs.next()) {
 String author = rs.getString("author");
 int pages = rs.getInt("pages");
 double price = rs.getDouble("price");
 out.println("<h3>Book Details:</h3>");
 out.println("Title: " + title + "<br>");
 out.println("Author: " + author + "<br>");
 out.println("Pages: " + pages + "<br>");
 out.println("Price: " + price + "<br>");
 } else {
 out.println("<h3>Book not found!</h3>");
 out.println("<a href='BookForm.jsp'>Back to form</a>");
 }
 }
 }
 } catch (Exception e) {
 out.println("<h3>Error: " + e.getMessage() + "</h3>");
 e.printStackTrace(out);
 }
 }
}
